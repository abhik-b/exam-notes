{"id":"gx0wes5gz0irclfjvffusa4","title":"Computer Architecture","desc":"","updated":1665119578094,"created":1663750024466,"custom":{},"fname":"computer-architecture","type":"note","vault":{"fsPath":".","selfContained":true,"name":"exam-notes"},"contentHash":"9505b71d5397c1397a774a8500a9bc90","links":[],"anchors":{"syllabus":{"type":"header","text":"Syllabus","value":"syllabus","line":8,"column":0,"depth":2},"digital-logic-circuits--components-":{"type":"header","text":"Digital Logic Circuits & Components :","value":"digital-logic-circuits--components-","line":10,"column":0,"depth":3},"data-representation-":{"type":"header","text":"Data Representation :","value":"data-representation-","line":26,"column":0,"depth":3},"register-transfer-and-micro-operations-":{"type":"header","text":"Register Transfer and Micro operations :","value":"register-transfer-and-micro-operations-","line":35,"column":0,"depth":3},"basic-computer-organization-and-design":{"type":"header","text":"Basic Computer Organization and Design:","value":"basic-computer-organization-and-design","line":41,"column":0,"depth":3},"programming-the-basic-computer-":{"type":"header","text":"Programming the Basic Computer :","value":"programming-the-basic-computer-","line":50,"column":0,"depth":3},"microprogrammed-control":{"type":"header","text":"Microprogrammed Control:","value":"microprogrammed-control","line":59,"column":0,"depth":3},"central-processing-unit":{"type":"header","text":"Central Processing Unit:","value":"central-processing-unit","line":65,"column":0,"depth":3},"pipeline-and-vector-processing":{"type":"header","text":"Pipeline and Vector Processing:","value":"pipeline-and-vector-processing","line":74,"column":0,"depth":3},"input-output-organization":{"type":"header","text":"Input-Output Organization:","value":"input-output-organization","line":82,"column":0,"depth":3},"memory-hierarchy":{"type":"header","text":"Memory Hierarchy:","value":"memory-hierarchy","line":92,"column":0,"depth":3},"multiprocessors":{"type":"header","text":"Multiprocessors:","value":"multiprocessors","line":101,"column":0,"depth":3},"conversion-formulas":{"type":"header","text":"Conversion Formulas","value":"conversion-formulas","line":118,"column":0,"depth":1},"binary-to-octal--vice-versa-":{"type":"header","text":"Binary to Octal & vice versa :","value":"binary-to-octal--vice-versa-","line":125,"column":0,"depth":2},"example-2--56-to-binary-":{"type":"header","text":"example 2 : 56 to binary .","value":"example-2--56-to-binary-","line":188,"column":0,"depth":3},"binary-to-hexadecimal--vice-versa-":{"type":"header","text":"Binary to Hexadecimal & vice versa :","value":"binary-to-hexadecimal--vice-versa-","line":194,"column":0,"depth":2},"logic-gate":{"type":"header","text":"Logic Gate","value":"logic-gate","line":248,"column":0,"depth":1},"basic-gates":{"type":"header","text":"Basic GATES","value":"basic-gates","line":253,"column":0,"depth":2},"and":{"type":"header","text":"AND","value":"and","line":255,"column":0,"depth":3},"or":{"type":"header","text":"OR","value":"or","line":266,"column":0,"depth":3},"not":{"type":"header","text":"NOT","value":"not","line":270,"column":0,"depth":3},"universal-gates":{"type":"header","text":"Universal GATES","value":"universal-gates","line":276,"column":0,"depth":2},"nand":{"type":"header","text":"NAND","value":"nand","line":280,"column":0,"depth":3},"nor":{"type":"header","text":"NOR","value":"nor","line":291,"column":0,"depth":3},"arithmetic-gates":{"type":"header","text":"Arithmetic GATES","value":"arithmetic-gates","line":295,"column":0,"depth":2},"xor":{"type":"header","text":"XOR","value":"xor","line":297,"column":0,"depth":3},"x-nor":{"type":"header","text":"X-NOR","value":"x-nor","line":301,"column":0,"depth":3},"truth-table":{"type":"header","text":"Truth Table","value":"truth-table","line":305,"column":0,"depth":2},"implement-all-gates-using-nand--nor-gate":{"type":"header","text":"Implement all Gates using NAND & NOR Gate","value":"implement-all-gates-using-nand--nor-gate","line":318,"column":0,"depth":1},"boolean-algebra":{"type":"header","text":"Boolean Algebra","value":"boolean-algebra","line":340,"column":0,"depth":1},"1-commutative-law":{"type":"header","text":"1. Commutative Law","value":"1-commutative-law","line":344,"column":0,"depth":4},"2-associative-law":{"type":"header","text":"2. Associative Law","value":"2-associative-law","line":349,"column":0,"depth":4},"3-distributive-law":{"type":"header","text":"3. Distributive Law","value":"3-distributive-law","line":354,"column":0,"depth":4},"binary-addition":{"type":"header","text":"Binary Addition","value":"binary-addition","line":359,"column":0,"depth":4},"binary-subtraction":{"type":"header","text":"Binary Subtraction","value":"binary-subtraction","line":371,"column":0,"depth":4},"de-morgans-theorem":{"type":"header","text":"De Morgans Theorem","value":"de-morgans-theorem","line":389,"column":0,"depth":4},"rules-of-boolean-algebra":{"type":"header","text":"Rules of boolean algebra","value":"rules-of-boolean-algebra","line":396,"column":0,"depth":4}},"children":[],"parent":"gjr379x4uby1klukcwuuafc","data":{}}
